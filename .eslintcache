[{"/home/kit/Documents/MERN/FoodRecipesApp/src/index.js":"1","/home/kit/Documents/MERN/FoodRecipesApp/src/App.js":"2","/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/About.jsx":"3","/home/kit/Documents/MERN/FoodRecipesApp/src/Components/Navbar.jsx":"4","/home/kit/Documents/MERN/FoodRecipesApp/src/Components/Footer.jsx":"5","/home/kit/Documents/MERN/FoodRecipesApp/src/Config/FirebaseConfig.js":"6","/home/kit/Documents/MERN/FoodRecipesApp/src/Config/AuthMethods.js":"7","/home/kit/Documents/MERN/FoodRecipesApp/src/Services/Auth.js":"8","/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/Home/Home.jsx":"9","/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/Recipes/Recipes.jsx":"10","/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/Recipe/Recipe.jsx":"11"},{"size":192,"mtime":1624194948768,"results":"12","hashOfConfig":"13"},{"size":638,"mtime":1624245611968,"results":"14","hashOfConfig":"13"},{"size":523,"mtime":1624194948768,"results":"15","hashOfConfig":"13"},{"size":1801,"mtime":1624248779540,"results":"16","hashOfConfig":"13"},{"size":1195,"mtime":1624209710799,"results":"17","hashOfConfig":"13"},{"size":532,"mtime":1624231545656,"results":"18","hashOfConfig":"13"},{"size":112,"mtime":1624231726800,"results":"19","hashOfConfig":"13"},{"size":277,"mtime":1624231186320,"results":"20","hashOfConfig":"13"},{"size":1318,"mtime":1624248796876,"results":"21","hashOfConfig":"13"},{"size":2083,"mtime":1624247748312,"results":"22","hashOfConfig":"13"},{"size":3424,"mtime":1624247110088,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"aodkq4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/home/kit/Documents/MERN/FoodRecipesApp/src/index.js",[],["49","50"],"/home/kit/Documents/MERN/FoodRecipesApp/src/App.js",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/About.jsx",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Components/Navbar.jsx",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Components/Footer.jsx",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Config/FirebaseConfig.js",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Config/AuthMethods.js",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Services/Auth.js",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/Home/Home.jsx",["51"],"import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport firebase from '../../Config/FirebaseConfig';\nimport {GoogleProvider} from '../../Config/AuthMethods';\nimport Auth from '../../Services/Auth';\nimport Navbar from '../../Components/Navbar';\nimport Footer from '../../Components/Footer';\nimport './Home.css';\n\nconst Home = () => {\n    const history = useHistory();\n\n    const SignIn = async (provider) => {\n        await Auth(provider);\n    }\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if(user){\n                localStorage.setItem(\"profile\", JSON.stringify(user.displayName));\n                history.push(\"/recipes\");\n            }else{\n                console.log(\"Please Sign Up\");\n            }\n        })\n    }, []);\n\n\n    return(\n        <>\n        <Navbar/>\n        <div className=\"home\">\n            <div className=\"title\">\n                <h3 >Hello Friend, Want To try Some New Recipes ?</h3>\n                <small>Click on google to begin</small>\n            </div>\n            <div className=\"buttonContainer\">\n                <button className=\"google\" onClick={() => SignIn(GoogleProvider)}><i class=\"fab fa-google\"></i></button>\n            </div>\n        </div>\n        <Footer/>\n        </>\n    )\n}\n\nexport default Home;","/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/Recipes/Recipes.jsx",[],"/home/kit/Documents/MERN/FoodRecipesApp/src/Pages/Recipe/Recipe.jsx",["52"],"import {useState, useEffect} from 'react';\nimport {Spinner} from 'react-bootstrap';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport Navbar from '../../Components/Navbar';\nimport Footer from '../../Components/Footer';\nimport './Recipe.css';\n\nconst MealPage = (props) => {\n    const [meal, setMeal] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [singleMeal, setSingleMeal] = useState([]);\n    const [user] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n\n    const pathname = props.location.pathname;\n    const mealId = pathname.substr(9);\n\n    useEffect(() => {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`)\n            .then((res) => {\n                const {meals} = res.data;\n                setMeal(meals);\n                setSingleMeal(meals[0]);\n                setLoading(!loading);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    const ingredients = [];\n    for(let i=1; i<=20; i++){\n        if(singleMeal[`strIngredient${i}`]){\n            ingredients.push(`${singleMeal[`strMeasure${i}`]} --- ${singleMeal[`strIngredient${i}`]}`)\n        }else{\n            break;\n        }\n    }\n\n\n    return(\n        <>\n        <Navbar/>\n        {user ? (\n           <div className=\"mealpage\">\n               {loading ? (\n               <div className=\"spinner\">\n                    <Spinner animation=\"grow\"/>\n               </div>\n               ) : (\n                   <>\n               {meal.map((single) => (\n                   <div className=\"single-meal\">\n                   <div className=\"mealContainer\">\n                       <div className=\"mealLeft\">\n                                <img src={single.strMealThumb} alt={single.strMeal} />\n                               <h4>Category: <span className=\"subtitle\">{single.strCategory} </span></h4>\n                               <h4>Affiliation: <span className=\"subtitle\"> {single.strArea}</span></h4>\n                               <h4>Ingredients: </h4>\n                               <ul className=\"ingredients card\">\n                                   {ingredients.map((ingredient) => (\n                                       <li className=\"list\">{ingredient}</li>\n                                   ))}\n                               </ul>\n                       </div>\n                       <div className=\"mealRight\">\n                       <h4>{single.strMeal}</h4>\n                           <p className=\"instructions\">{single.strInstructions}</p>\n                       </div>\n                   </div>\n                   <div className=\"videoWrapper\">\n                   <iframe className=\"iframe\" title={single.strMeal}\n                       src={`https://www.youtube.com/embed/${single.strYoutube.slice(-11)}`}>\n                   </iframe>\n               </div>\n               </div>\n               ))}\n               </>\n               )}\n           </div>\n           ) : (\n            <div className=\"defaultContainer\">\n            <div className=\"defaultContent\">\n                <h1>Seems you are not signed in </h1>\n                <small>Sign in Here</small>\n                <div className=\"signup\"> <Link to=\"/\"> <i className=\"fas fa-sign-in-alt\"></i> </Link></div>\n            </div>\n        </div>\n           )}\n           <Footer/>\n        </>\n    )\n}\n\nexport default MealPage;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":26,"column":8,"nodeType":"59","endLine":26,"endColumn":10,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":29,"column":8,"nodeType":"59","endLine":29,"endColumn":10,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has missing dependencies: 'loading' and 'mealId'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [history]",{"range":"71","text":"72"},"Update the dependencies array to be: [loading, mealId]",{"range":"73","text":"74"},[797,799],"[history]",[992,994],"[loading, mealId]"]