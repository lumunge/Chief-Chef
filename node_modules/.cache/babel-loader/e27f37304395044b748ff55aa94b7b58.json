{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kit/Documents/MERN/FoodRecipesApp/client/src/Components/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport Meals from './Meals';\n\nconst Main = () => {\n  _s();\n\n  // initial states\n  const [meals, setMeals] = useState([]);\n  const [query, setQuery] = useState('chicken');\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(false); // getMeals as a side effect\n\n  useEffect(() => {\n    getMeals();\n  }, [query]); // fetch data from provider based on $query as the search parameter\n\n  const getMeals = () => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`).then(res => {\n      console.log(res.status);\n      const allMeals = res.data.meals;\n      setMeals(allMeals);\n      console.log(allMeals);\n      setLoading(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // get input data from field\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }; // search for a specific meal\n\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBar\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getSearch,\n        className: \"searchForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Meal\",\n          value: search,\n          onChange: updateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meals\",\n      children: meals.map(meal =>\n      /*#__PURE__*/\n      // geting meals and setting props\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Meals, {\n          mealId: meal.idMeal,\n          image: meal.strMealThumb,\n          title: meal.strMeal,\n          category: meal.strCategory,\n          origin: meal.strArea\n        }, meal.idMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // while getting meals show spinner else show meals\n    _jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"YkK5tXI54Y+QWYDYji7XBXLG2Is=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/kit/Documents/MERN/FoodRecipesApp/client/src/Components/Main.jsx"],"names":["axios","Spinner","React","useState","useEffect","Meals","Main","meals","setMeals","query","setQuery","search","setSearch","loading","setLoading","getMeals","get","then","res","console","log","status","allMeals","data","catch","err","updateSearch","e","target","value","getSearch","preventDefault","map","meal","idMeal","strMealThumb","strMeal","strCategory","strArea"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport React, {useState, useEffect} from 'react';\nimport '../index.css';\nimport Meals from './Meals';\n\nconst Main = () => {\n\n    // initial states\n    const [meals, setMeals] = useState([]);\n    const [query, setQuery] = useState('chicken');\n    const [search, setSearch] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    // getMeals as a side effect\n    useEffect(() => {\n        getMeals();\n    }, [query]);\n\n\n    // fetch data from provider based on $query as the search parameter\n    const getMeals = () => {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`)\n            .then(res => {\n                console.log(res.status);\n                const allMeals = res.data.meals;\n                setMeals(allMeals);\n                console.log(allMeals);\n                setLoading(true)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n   \n    // get input data from field\n    const updateSearch = (e) => {\n        setSearch(e.target.value);\n    }\n\n    // search for a specific meal\n    const getSearch = (e) => {\n        e.preventDefault();\n        setQuery(search);\n        setSearch('');\n    }\n\n\n    return(\n        <>\n        <div className=\"searchBar\">\n                <form onSubmit={getSearch} className=\"searchForm\">\n                    <input type=\"text\" placeholder=\"Search Meal\" value={search} onChange={updateSearch} />\n                    <button type=\"submit\" className=\"btn btn-outline-primary\">Search</button>\n                </form>\n            </div>\n\n\n        {loading ? (\n        \n        <div className=\"meals\">\n            {meals.map(meal => (\n                // geting meals and setting props\n                <div>\n                    <Meals\n                        key={meal.idMeal}\n                        mealId={meal.idMeal}\n                        image={meal.strMealThumb}\n                        title={meal.strMeal}\n                        category={meal.strCategory}\n                        origin={meal.strArea}\n                    />\n                </div>\n            ))}\n        </div>\n        ) : (\n        // while getting meals show spinner else show meals\n        <div className=\"spinner\"><Spinner animation=\"border\" /></div>\n        )}\n        </>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}